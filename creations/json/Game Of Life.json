{
  "name": "Game Of Life",
  "lastEdit": 1676062655607,
  "created": 1665912402392,
  "html": "\n<!DOCTYPE html>\n<html lang=\"de\">\n    <head>\n        <title></title>\n        <meta charset=\"utf-8\">\n    </head>\n    <body>\n        <div>\n            <h1>Game of Life</h1>\n            <button id=\"ctr\">Start</button>\n            <button id=\"ctrclear\">Clear</button>\n            <button id=\"ctrshuffle\">Shuffle</button> Speed:\n            <input id=\"frames\" type=\"number\">&nbsp; tileSize:\n            <input id=\"tile\" type=\"number\">&nbsp; Grid Height:\n            <input id=\"height\" type=\"number\">&nbsp; Grid Width:\n            <input id=\"width\" type=\"number\">&nbsp; Full Size:\n            <input id=\"full\" type=\"checkbox\" checked>\n        </div>\n        <canvas id=\"board\"></canvas>\n    </body>\n</html>",
  "css": "\nbody{\nmargin: 0;\ntext-align: center;\ncolor: white;\n}\n\ncanvas{\nborder:1px solid #000000;\n}\n\nh1{\nmargin: 0;\n}\n\n#frames{\nwidth: 100px;\n}\n",
  "js": "    var frames = 15;\n    var tileSize = 5;\n    var canvas = document.getElementById(\"board\");\n    var ctx = canvas.getContext(\"2d\");\n    var control = document.getElementById(\"ctr\");\n    var controlClear = document.getElementById(\"ctrclear\");\n    var controlShuffle = document.getElementById(\"ctrshuffle\");\n    var inputFrames = document.getElementById(\"frames\");\n    var fullSize = document.getElementById(\"full\");\n    var width = document.getElementById(\"width\");\n    var height = document.getElementById(\"height\");\n    var tile = document.getElementById(\"tile\");\n    var fps = document.getElementById(\"fps\");\n    var boardSizeX;\n    var boardSizeY;\n    var boardState;\n    var running = 0, r;\n    var boardLine;\n    var loopY;\n    var loopX;\n    var interval;\n    var temp = {};\n    var mouseIsDown = 0;\n    var mode = null;\n    inputFrames.value = frames;\n    tile.value = tileSize;\n    canvas.style.backgroundColor = \"black\";\n\n    var draw = (alive, x, y) => {\n        ctx.fillStyle = alive ? \"green\" : \"black\";\n        ctx.fillRect(x * tileSize, y * tileSize, tileSize, tileSize);\n    }\n\n    var prepare = () => {\n        boardState = [];\n        for (y = 0; y < loopY; y++) {\n            boardLine = [];\n            for (x = 0; x < loopX; x++) {\n                var living = (Math.random() * 100) < 25;\n                boardLine.push(living);\n                draw(living, x, y);\n            }\n            boardState.push(boardLine);\n        }\n    };\n\n    var sizeChange = e => {\n        e && e.target !== fullSize && (fullSize.checked = 0);\n        boardSizeX = !e || e.target === fullSize ? fullSize.checked ? innerWidth - 5 : temp.width : width.value;\n        boardSizeY = !e || e.target === fullSize ? fullSize.checked ? innerHeight - 70 : temp.height : height.value;\n        boardSizeX -= boardSizeX % tileSize;\n        boardSizeY -= boardSizeY % tileSize;\n        fullSize.checked ? (\n            width.value = boardSizeX,\n            height.value = boardSizeY\n        ) : (\n            event.target !== fullSize && (\n                temp.width = width.value,\n                temp.height = height.value\n            )\n        );\n        loopY = boardSizeY / tileSize;\n        loopX = boardSizeX / tileSize;\n        width.value = boardSizeX;\n        height.value = boardSizeY;\n        canvas.style.width = boardSizeX + \"px\";\n        canvas.style.height = boardSizeY + \"px\";\n        canvas.width = boardSizeX;\n        canvas.height = boardSizeY;\n        prepare();\n    };\n\n    update = () => {\n        var newBoardState = [];\n        var living, xm, xp, ym, yp;\n        for (y = 0; y < loopY; y++) {\n            var newBoardLine = [];\n            for (x = 0; x < loopX; x++) {\n                living = 0;\n                (xm = x - 1) < 0 && (xm = loopX - 1);\n                (ym = y - 1) < 0 && (ym = loopY - 1);\n                (xp = x + 1) >= loopX && (xp = 0);\n                (yp = y + 1) >= loopY && (yp = 0);\n                boardState[ym][xm] && living++;\n                boardState[ym][x] && living++;\n                boardState[ym][xp] && living++;\n                boardState[y][xm] && living++;\n                boardState[y][xp] && living++;\n                boardState[yp][xm] && living++;\n                boardState[yp][x] && living++;\n                boardState[yp][xp] && living++;\n                boardState[y][x] ? (living == 2 || living == 3 ? newBoardLine.push(true) : (newBoardLine.push(false), draw(0, x, y))) : (living == 3 ? (newBoardLine.push(true), draw(1, x, y)) : newBoardLine.push(false));\n            }\n            newBoardState.push(newBoardLine);\n        }\n        boardState = newBoardState.splice(0);\n    };\n\n    var tileChange = () => {\n        let r = running;\n        r && clearInterval(interval);\n        let e = event.target.value;\n        if (e < 1) e = event.target.value = 1;\n        if (e > loopX / 4 || e > loopY / 4) running ? clickControl() : e = event.target.value = 5;\n        tileSize = e;\n        boardSizeX = fullSize.checked ? innerWidth - 5 : width.value;\n        boardSizeY = fullSize.checked ? innerHeight - 70 : height.value;\n        boardSizeX -= boardSizeX % tileSize;\n        boardSizeY -= boardSizeY % tileSize;\n        loopY = boardSizeY / tileSize;\n        loopX = boardSizeX / tileSize;\n        canvas.style.width = boardSizeX + \"px\";\n        canvas.style.height = boardSizeY + \"px\";\n        canvas.width = boardSizeX;\n        canvas.height = boardSizeY;\n        prepare();\n        r && (interval = setInterval(update, Math.ceil(1000 / frames)));\n    };\n    var canvasMouseDown = () => {\n        if (running) return;\n        var x = Math.floor(event.offsetX / tileSize);\n        var y = Math.floor(event.offsetY / tileSize);\n        boardState[y][x] = !boardState[y][x];\n        mode = boardState[y][x];\n        draw(mode, x, y);\n        mouseIsDown = 1;\n    };\n\n    var canvasMouseUp = () => {\n        mouseIsDown = 0;\n        mode = null;\n    };\n\n    var canvasMouseMove = () => {\n        if (!mouseIsDown) return;\n        var x = Math.floor(event.offsetX / tileSize);\n        var y = Math.floor(event.offsetY / tileSize);\n        boardState[y][x] = mode;\n        draw(mode, x, y);\n    };\n\n    var clickControl = function() {\n        (running = !running) ? (\n            control.innerText = \"Stop\",\n            interval = setInterval(update, Math.ceil(1000 / frames))\n        ) : (\n            control.innerText = \"Start\", clearInterval(interval)\n        );\n    }\n\n    var clickClear = () => {\n        for (y = 0; y < loopY; y++) for (x = 0; x < loopX; x++)(boardState[y][x] = false, draw(0, x, y));\n    };\n\n    var clickShuffle = () => {\n        for (y = 0; y < loopY; y++) for (x = 0; x < loopX; x++)(boardState[y][x] = (Math.random() * 100) < 25, draw(boardState[y][x], x, y));\n    };\n\n    var changeFrames = e => {\n        frames = e.target.value;\n        running && (\n            clearInterval(interval),\n            interval = setInterval(update, Math.ceil(1000 / frames))\n        );\n    }\n\n    canvas.onmousedown = canvasMouseDown;\n    canvas.onmousemove = canvasMouseMove;\n    canvas.onmouseup = canvasMouseUp;\n    control.onclick = clickControl;\n    controlClear.onclick = clickClear;\n    controlShuffle.onclick = clickShuffle;\n    inputFrames.onchange = changeFrames;\n    width.onchange = height.onchange = fullSize.onchange = sizeChange;\n    tile.onchange = tileChange;\n\n    sizeChange();\n    control.click();\n",
  "ts": "",
  "assets": "",
  "size": 7683
}